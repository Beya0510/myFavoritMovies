@page "/favorites"  
@using Favies.Services  
@inject FavoritesService FavoritesService  

<h3>Favoris</h3>
@*
@if (FavoritesService.GetFavorites().Count == 0)  // Vérifie si la liste des favoris est vide
{
    <p>Aucun favori ajouté pour le moment.</p>  
}
else
{
    <ul>
        @foreach (var favorite in FavoritesService.GetFavorites())  
        {
            <li>
                @favorite  
                <button @onclick="() => FavoritesService.RemoveFavorites(favorite)">Supprimer</button>  
                <button @onclick="() => StartEditFavorite(favorite)">Éditer</button>  
            </li>
        }
    </ul>
}

@if (isEditing)  // Vérifie si l'utilisateur est en mode édition
{
    <EditForm Model="@editedFavorite" OnValidSubmit="SaveEditedFavorite">  
        <DataAnnotationsValidator />  
        <ValidationSummary />  
        <InputText @bind-Value="editedFavorite" />  
        <button type="submit">Save</button>  
        <button type="button" @onclick="CancelEdit">Cancel</button>  
    </EditForm>
}

<a href="/datadisplay">lien vers la page d'affichage</a>

@code {
    private string? editedFavorite;  // Champ pour le favori en cours d'édition (nullable)
    private string? originalFavorite;  // Champ pour le favori original avant édition (nullable)
    private bool isEditing = false;  // Indique si l'utilisateur est en mode édition

    // Méthode pour supprimer un favori
    private void RemoveFavorite(string favorite)
    {
        FavoritesService.RemoveFavorites(favorite);  // Supprime le favori via le service
    }

    // Méthode pour commencer l'édition d'un favori
    private void StartEditFavorite(string favorite)
    {
        originalFavorite = favorite;  // Stocke le favori original
        editedFavorite = favorite;  // Prépare le favori pour l'édition
        isEditing = true;  // Met le mode édition à vrai
    }

    // Méthode pour sauvegarder les modifications d'un favori
    private void SaveEditedFavorite()
    {
        if (originalFavorite != null && editedFavorite != null)  // Vérifie que les valeurs ne sont pas null
        {
            FavoritesService.EditFavorites(originalFavorite, editedFavorite);  // Édite le favori via le service
            isEditing = false;  // Met le mode édition à faux
        }
    }

    // Méthode pour annuler l'édition
    private void CancelEdit()
    {
        isEditing = false;  // Met le mode édition à faux
    }
}*@